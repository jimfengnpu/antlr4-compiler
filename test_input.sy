const int n = 256;
int g[256][256];
int fib[16][2][2]={{1, 1}, {2, 3}};
int cnt = 0;
int f = 1;
int gcd(int a, int b){
    if(!a)return b;
    return gcd(b%a, a);
}

int main(){
    int x, y, tx, ty, tg, s;
    x = getint();
    y = getint();
    tx = getint();
    ty = getint();
    s = getint();
    if(ty > tx){
        int t = ty;
        ty = tx;
        tx = t;
    }
    tg = gcd(ty, tx);
    if(tg != 1){
        f = 0;
    }
    if(x < 256 && y < 256){
        int i = 1;
        while(i <= y){
            int j = i;
            while(j <= x){
                g[i][j] = gcd(i, j);
                if(i/g[i][j] == ty/tg && j/g[i][j] == tx/tg)
                {
                    cnt = cnt + 1;
                }
                j = j + 1;
            }
            i = i + 1;
        }
    }
    putint(f);
    putch(10);
    putint(s*(cnt-tg-(tg-1)));
    putch(10);
    return 0;
}